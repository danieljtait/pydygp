.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_tutorials_mlfm_adapgrad_tutorials_plot_mlfm_product.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_mlfm_adapgrad_tutorials_plot_mlfm_product.py:



Product Topology of MLFM Models
===============================

This note demonstrates the use of the :py:obj:`*` operator
to construct the Cartesian product of MLFM models. The
idea is to combine MLFM with distinct topologies, but a
common set of latent forces.

.. note::

   Still in development -- working out the most natural way of calling fit on the
   product object. So far all of this note does it demonstrate that the product
   operator now gathers the MLFM objects up nicely and provides a nice method
   for flattening them back out.






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    True 1
    True 3
    True 6
    {'g': False, 'logpsi': False, 'beta_0': False, 'logphi_0': False, 'loggamma_0': True, 'logtau_0': False, 'beta_1': False, 'logphi_1': False, 'loggamma_1': True, 'logtau_1': False, 'beta_2': False, 'logphi_2': False, 'loggamma_2': True, 'logtau_2': False}




|


.. code-block:: python

    from pydygp.liealgebras import so
    from pydygp.linlatentforcemodels import MLFMAdapGrad
    from sklearn.gaussian_process.kernels import RBF

    mlfm1 = MLFMAdapGrad(so(2), R=1, lf_kernels=[RBF(), ])
    mlfm2 = MLFMAdapGrad(so(3), R=1, lf_kernels=[RBF(), ])
    mlfm3 = MLFMAdapGrad(so(4), R=1, lf_kernels=[RBF(), ])

    mmlfm = mlfm1 * mlfm2
    mmlfm = mmlfm * mlfm3

    mlfms = mmlfm.flatten()
    for item in mlfms:
        print(hasattr(item, 'fit'), item.dim.D)


    fitopts = {'loggamma_is_fixed': True}

    is_fixed_vars = mmlfm._fit_kwarg_parser(len(mlfms), **fitopts)
    print(is_fixed_vars)


**Total running time of the script:** ( 0 minutes  0.001 seconds)


.. _sphx_glr_download_tutorials_mlfm_adapgrad_tutorials_plot_mlfm_product.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_mlfm_product.py <plot_mlfm_product.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_mlfm_product.ipynb <plot_mlfm_product.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
