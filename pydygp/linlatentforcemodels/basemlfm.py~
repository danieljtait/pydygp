


class BaseMLFM:

    def __init__(self, struct_mats):
        self.struct_mats = np.asarray(struct_mats)


    def vec_flow(self, x_list, g_list):
        """
        Arguments should be list types where each entry is the
        kth dimension of X and rth latent force respectively
        """
        pass
        # column stack the variables
        #X = column_stack(x_list)        
        #G = column_stack(g_list)
        #
        #gAs = [struct_mats[0] + sum([gt_k*struct_mats[1:]) for gt_k in grow)
        #       for grow in G]

        # F(t, x) = [A0 + sum(g(t)*Ar)]x(t)
        #F = np.array([np.dot(At, x) for At, x in zip(gAs, X)])
        #return F
